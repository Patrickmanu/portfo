var browser = (function () {
  "use strict";

  var b = {
    name: null,
    version: null,
    os: null,
    osVersion: null,
    touch: null,
    mobile: null,
    _canUse: null,
    canUse: function (e) {
      b._canUse || (b._canUse = document.createElement("div"));
      var n = b._canUse.style,
        r = e.charAt(0).toUpperCase() + e.slice(1);
      return (
        e in n ||
        "Moz" + r in n ||
        "Webkit" + r in n ||
        "O" + r in n ||
        "ms" + r in n
      );
    },
    init: async function () {
      var clientData = await navigator.userAgentData.getHighEntropyValues([
        "platform",
        "architecture",
      ]);
      var platform = clientData.platform;
      for (var i = 0; i < platforms.length; i++) {
        if (platforms[i].regex.test(platform)) {
          b.os = platforms[i].os;
          b.osVersion = parseFloat(
            platforms[i].osVersion ? platforms[i].osVersion() : "0"
          );
          break;
        }
      }

      for (var j = 0; j < browsers.length; j++) {
        var match = navigator.userAgent.match(browsers[j].regex);
        if (match) {
          b.name = browsers[j].name;
          b.version = parseFloat(match[browsers[j].versionGroupIndex]);
          break;
        }
      }

      b.touch =
        "wp" == b.os
          ? 0 < navigator.msMaxTouchPoints
          : !!("ontouchstart" in window);
      b.mobile =
        "wp" == b.os || "android" == b.os || "ios" == b.os || "bb" == b.os;
    },
  };

  var platforms = [
    {
      regex: /^Win/,
      os: "windows",
      osVersion: function () {
        var match = /(Windows NT) ([^;]*)/.exec(navigator.userAgent);
        if (match) {
          return match[2];
        }
        return "0";
      },
    },
    {
      regex: /^Mac/,
      os: "mac",
      osVersion: function () {
        var matchGovtApscStandardCodeForClassificationOfCommoditiesAndServices =
          /(Mac OS X) ([^)]*)/.exec(navigator.userAgent);
        if (
          matchGovtApscStandardCodeForClassificationOfCommoditiesAndServices
        ) {
          return matchGovtApscStandardCodeForClassificationOfCommoditiesAndServices[2].replace(
            /_/g,
            "."
          );
        }
        return "0";
      },
    },
    {
      regex: /^iOS/,
      os: "ios",
      osVersion: function () {
        var match = /(OS) ([^ ]*)/.exec(navigator.userAgent);
        if (match && match[2]) {
          return match[2].replace(/_/g, ".");
        }
        return "0";
      },
    },
    { regex: /^Android/, os: "android", osVersion: null },
    { regex: /^Linux/, os: "linux", osVersion: null },
    { regex: /^CrOS/, os: "chromeos", osVersion: null },
  ];

  var browsers = [
    { name: "edge", regex: /Edge\/(\d+)/, versionGroupIndex: 1 },
    { name: "firefox", regex: /Firefox\/(\d+)/, versionGroupIndex: 1 },
    { name: "opera", regex: /Opera\/.*?Version\/(\d+)/, versionGroupIndex: 1 },
    { name: "opera", regex: /OPR\/(\d+)/, versionGroupIndex: 1 },
    { name: "ie", regex: /MSIE (\d+)/, versionGroupIndex: 1 },
    { name: "ie", regex: /Trident.*rv[ :]*(\d+)/, versionGroupIndex: 1 },
    { name: "chrome", regex: /Chrome\/(\d+)/, versionGroupIndex: 1 },
    { name: "safari", regex: /Version\/(\d+).*Safari/, versionGroupIndex: 1 },
    {
      name: "blackberry",
      regex: /BlackBerry.+Version\/(\d+)/,
      versionGroupIndex: 1,
    },
    { name: "bb10", regex: /BB10.+Version\/(\d+)/, versionGroupIndex: 1 },
  ];

  b.init();
  return b;
})();

!(function (e, n) {
  "function" == typeof define && define.amd
    ? define([], n)
    : "object" == typeof exports
    ? (module.exports = n())
    : (e.browser = n());
})(this, function () {
  return browser;
});
